---
import Base from "../../layouts/Base.astro";
import { getCollection } from "astro:content";
import Breadcrumbs from "../../components/Breadcrumbs.astro";

const posts = (await getCollection("blog"))
  .filter((p) => !p.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Group posts by featured and regular
const featuredPosts = posts.filter((p) => p.data.featured);
const regularPosts = posts.filter((p) => !p.data.featured);
---

<Base title="Blog - Scripted">
  <!-- Breadcrumbs -->
  <Breadcrumbs items={[
    { label: "Home", href: "/" },
    { label: "Blog" }
  ]} />
  
  <!-- Header -->
  <div class="mb-12">
    <h1 class="text-4xl font-bold mb-4">Blog</h1>
    <p class="text-xl text-slate-600">Thoughts, tutorials, and insights on development, writing, and technology.</p>
  </div>

  <!-- Featured Posts -->
  {featuredPosts.length > 0 && (
    <section class="mb-12">
      <h2 class="text-2xl font-semibold mb-6">Featured Posts</h2>
      <div class="grid gap-6 md:grid-cols-2">
        {featuredPosts.map((post) => (
          <article class="group">
            <a href={`/blog/${post.slug}/`} class="block">
              <div class="rounded-xl border border-slate-200 p-6 hover:border-slate-300 transition-colors">
                <div class="flex items-center gap-2 mb-3">
                  {post.data.tags.slice(0, 2).map((tag) => (
                    <span class="px-2 py-1 bg-blue-100 text-blue-700 text-xs rounded-full font-medium">
                      {tag}
                    </span>
                  ))}
                  {post.data.featured && (
                    <span class="px-2 py-1 bg-yellow-100 text-yellow-700 text-xs rounded-full font-medium">
                      Featured
                    </span>
                  )}
                </div>
                <h3 class="text-xl font-semibold mb-2 group-hover:text-blue-600 transition-colors">
                  {post.data.title}
                </h3>
                {post.data.description && (
                  <p class="text-slate-600 mb-4 line-clamp-3">
                    {post.data.description}
                  </p>
                )}
                <div class="flex items-center justify-between text-sm text-slate-500">
                  <div class="flex items-center gap-4">
                    <span>{new Date(post.data.pubDate).toLocaleDateString()}</span>
                    {post.data.author && (
                      <span>by {post.data.author}</span>
                    )}
                  </div>
                  {post.data.readingTime && (
                    <span>{post.data.readingTime} min read</span>
                  )}
                </div>
              </div>
            </a>
          </article>
        ))}
      </div>
    </section>
  )}

  <!-- All Posts -->
  <section>
    <h2 class="text-2xl font-semibold mb-6">
      {featuredPosts.length > 0 ? "All Posts" : "Latest Posts"}
    </h2>
    <div class="grid gap-6">
      {posts.map((post) => (
        <article class="group">
          <a href={`/blog/${post.slug}/`} class="block">
            <div class="rounded-xl border border-slate-200 p-6 hover:border-slate-300 transition-colors">
              <div class="flex items-start justify-between gap-4">
                <div class="flex-1">
                  <div class="flex items-center gap-2 mb-2">
                    {post.data.tags.slice(0, 3).map((tag) => (
                      <span class="px-2 py-1 bg-slate-100 text-slate-600 text-xs rounded-full">
                        {tag}
                      </span>
                    ))}
                    {post.data.featured && (
                      <span class="px-2 py-1 bg-yellow-100 text-yellow-700 text-xs rounded-full font-medium">
                        Featured
                      </span>
                    )}
                  </div>
                  <h3 class="text-lg font-semibold mb-2 group-hover:text-blue-600 transition-colors">
                    {post.data.title}
                  </h3>
                  {post.data.description && (
                    <p class="text-slate-600 line-clamp-2">
                      {post.data.description}
                    </p>
                  )}
                </div>
                <div class="text-sm text-slate-500 text-right min-w-fit">
                  <div>{new Date(post.data.pubDate).toLocaleDateString()}</div>
                  {post.data.author && (
                    <div class="text-xs">by {post.data.author}</div>
                  )}
                  {post.data.readingTime && (
                    <div>{post.data.readingTime} min read</div>
                  )}
                </div>
              </div>
            </div>
          </a>
        </article>
      ))}
    </div>
  </section>

  <!-- RSS Link -->
  <div class="mt-12 pt-8 border-t border-slate-200 text-center">
    <p class="text-slate-600 mb-2">Stay updated with new posts</p>
    <a 
      href="/rss.xml" 
      class="inline-flex items-center gap-2 px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors"
    >
      <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
        <path d="M5 3a1 1 0 000 2c5.523 0 10 4.477 10 10a1 1 0 102 0C17 8.373 11.627 3 5 3z"/>
        <path d="M4 9a1 1 0 011-1 7 7 0 017 7 1 1 0 11-2 0 5 5 0 00-5-5 1 1 0 01-1-1z"/>
        <path d="M3 15a2 2 0 114 0 2 2 0 01-4 0z"/>
      </svg>
      Subscribe to RSS
    </a>
  </div>
</Base>
